apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "sqs-prometheus-exporter.name" . }}
    chart: {{ template "sqs-prometheus-exporter.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "sqs-prometheus-exporter.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sqs-prometheus-exporter.name" . }}
        release: {{ .Release.Name }}
      annotations:
{{- with .Values.deployment.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
        prometheus.io/scrape: "true"
    spec:
{{- if or .Values.serviceAccount.name .Values.serviceAccount.create }}
      serviceAccountName: {{.Values.serviceAccount.name | default .Values.app.name | quote }}
{{- end }}
      containers:
        - name: {{ .Values.app.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: traffic
              containerPort: {{ .Values.deployment.port }}
              protocol: TCP
          resources:
{{- with .Values.deployment.resources }}
{{ toYaml . | indent 12 }}
{{- end }}
          env:
            - name: PORT
              value: {{ .Values.deployment.port | quote }}
            - name: SQS_QUEUE_URLS
              value: {{ .Values.sqs.queueUrls | join "," | quote }}
            - name: SQS_MONITOR_INTERVAL_SECONDS
              value: {{ .Values.sqs.monitorIntervalSeconds | quote }}
            - name: AWS_REGION
              value: {{ .Values.sqs.region | quote }}
{{- range $key, $value := .Values.deployment.extraEnv }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
{{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: traffic
            initialDelaySeconds: 3
            timeoutSeconds: 5
            periodSeconds: 30
      restartPolicy: Always
      nodeSelector:
{{- with .Values.deployment.nodeSelector }}
{{ toYaml . | indent 8 }}
{{- end }}
      affinity:
{{- with .Values.deployment.affinity }}
{{ toYaml . | indent 8 }}
{{- end }}
      tolerations:
{{- with .Values.deployment.tolerations }}
{{ toYaml . | indent 8 }}
{{- end }}
