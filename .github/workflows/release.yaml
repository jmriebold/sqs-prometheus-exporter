name: Release

on:
  release:
    types: [published]

jobs:
  release-bins:
    name: Release Go

    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Release
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.21.0"
          extra_files: LICENSE README.md

  release-docker:
    name: Release Docker

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Populate cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${GITHUB_REPOSITORY}
          VERSION=${GITHUB_REF#refs/tags/v}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}

      - name: Log in
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  release-chart:
    name: Release chart

    runs-on: ubuntu-latest

    permissions:
      contents: write # to push chart release and create a release (helm/chart-releaser-action)
      packages: write # needed for ghcr access
      id-token: write # needed for keyless signing

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetch
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.9.2

      - name: Set up cosign-installer
        uses: sigstore/cosign-installer@v3

      - name: Log in
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          cd chart
          helm package ${REPO_NAME}
          helm push *.tgz "oci://ghcr.io/${GITHUB_REPOSITORY_OWNER}/charts"
