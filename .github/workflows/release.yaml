name: Release

on:
  release:
    types: [published]

jobs:
  release-bins:
    name: Release Go

    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Release
        uses: wangyoucao577/go-release-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goversion: "1.22.0"
          extra_files: LICENSE README.md

  release-docker:
    name: Release Docker

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Populate cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${GITHUB_REPOSITORY}
          VERSION=${GITHUB_REF#refs/tags/v}
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:latest"
          echo ::set-output name=tags::${TAGS}

      - name: Log in
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
